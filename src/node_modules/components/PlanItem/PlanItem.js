import React, {Component} from 'react';
import './PlanItem.css';
import { observer } from 'mobx-react';
import { ResizableBox, Resizable } from 'react-resizable';
import Draggable from 'react-draggable';


class PlanItem extends Component {

    startPositionX = 0;
    widthMultiple = 407;

    changeTime = (props, data) => {
        props.params.setTime(data);
    };

    dragStart = (event) => {
        this.startPositionX = event.clientX;
        this.widthMultiple = document.querySelector('.plan-item').offsetWidth;
    };

    checkingPosition = (event, props) => {
        let deltaX = this.startPositionX - event.clientX;
        let deltaDays = Math.round(deltaX/this.widthMultiple);
        let dateArr = props.params.date.split('.');

        props.params.setDate(`${dateArr[0] - deltaDays}.${dateArr[1]}.${dateArr[2]}`);

        let element = document.querySelector('.react-draggable-dragged');
        if (element) {
            element.style.transform = 'translate(0,0)';
        }
    };

    render() {
        return (
            <PlanItemO
                dragStart={this.dragStart}
                checkingPosition={this.checkingPosition}
                changeTime={this.changeTime}
                {...this.props}/>
        );
    }
}

const PlanItemO = observer(props => {
    return (
        <Draggable
            bounds="body"
            scale={1}
            handle={".cursor"}
            height={props.params.time*2}
            onStart={(event) => {props.dragStart(event)}}
            onStop={(event) => {props.checkingPosition(event, props)}}
        >
            <div className={'drag-container box no-cursor'}>
        <ResizableBox
            className={`plan-item plan-item--${props.zone}`}
            width={'100%'} height={props.params.time*2}
            axis={'y'}
            draggableOpts={{
                grid: [30, 30]
            }}
            onResizeStop={(event, data) => {
                props.changeTime(props, (data.node.offsetTop + 10)/2);
            }}
            minConstraints={[30, 30]}
            maxConstraints={[900, 900]}>
            <div className={'plan-item__title cursor'}>{props.params.name}</div>
        </ResizableBox>
            </div>
        </Draggable>

    );
});

export default PlanItem;


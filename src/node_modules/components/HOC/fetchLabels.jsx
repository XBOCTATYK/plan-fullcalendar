import React, {Component} from 'react';

/**
 * Список элементов для выбранного компонента
 * @param WrappedComponent
 * @param DataManager
 * @return {{contextType?: React.Context<any>, new<P, S>(props: Readonly<P>): FetchLabel, new<P, S>(props: P, context?: any): FetchLabel, prototype: FetchLabel}}
 */
export default function fetchLabel(WrappedComponent, DataManager) {
    return class FetchLabel extends Component {

        static defaultProps = {
            onChange: () => {}
        };

        state = {
            labelsList: []
        };

        getList = (name) => {

            const requestName = name || '';

            DataManager.getList({name: requestName}).then(result => {
                let labelsArray = [];
                const list = result.data;

                for (let item of list) {
                    labelsArray.push(item);
                }

                this.setState({labelsList: labelsArray});
            });
        };

        onChange = (event) => {
            this.getList(event.target.value);
            this.props.onChange(event);
        };

        componentWillMount() {
            const list = this.getList();
        }

        render() {
            return <WrappedComponent {...this.props} onChange={this.onChange} labelsList={this.state.labelsList}/>
        }
    }
}

import React, {Component} from 'react';
import Button from '@material-ui/core/Button';
import CreateFormSelect from 'components/Forms/CreatePlanItem/Selects/CreateFormSelect';
import CreateFormTextField from "components/Forms/CreatePlanItem/TextFields/CreateFormTextField";
import H2 from 'components/ui/H2/H2';
import ZONE_TYPE from 'config/zoneTypes.config';
import { Formik } from 'formik';
import projectList from 'startData/projects';
import './CreatePlanItem.css';


class CreatePlanItem extends Component {

    static defaultProps = {
        params: {},
        planItemsCollection: {}
    };

    submit = (data) => {
        let params = {
            id: this.props.params.lastItemId++,
            projectName: data.project || 'Проект не указан',
            name: data.task || '',
            date: this.props.params.date,
            userId: this.props.params.userId || '',
            zone: data.zone || ZONE_TYPE.PRODUCTIVE,
            time: data.time || '15',
            additionDesc: data.desc || '',
            timeChecked: 0
        };
        console.log(params);
        this.props.planItemsCollection.addItem(params);
        this.props.cancel();
    };

    render() {
        return (
            <div className={'create-plan-item'}>
               <Formik
                   initialValues={{
                       project: this.props.params.project || '',
                       task: this.props.params.task || '',
                       desc: this.props.params.additionalDesc || '',
                       zone: this.props.params.zone || '',
                       time: this.props.params.time || 15
                   }}

                   onSubmit={(values, { setSubmitting }) => {
                       this.submit(values, setSubmitting);
                   }}

                   render={(props) => (
                       <form onSubmit={props.handleSubmit}>
                           <H2>Создать бронь</H2>
                           <CreateFormSelect
                               id={'project'}
                               name={'project'}
                               label={'Проект'}
                               items={projectList.projects}
                               onChange={props.handleChange}
                               onBlur={props.handleBlur}
                               value={props.values.project}
                           />
                           <CreateFormSelect
                               id={'task'}
                               name={'task'}
                               label={'Задача'}
                               items={projectList.tasks}
                               onChange={props.handleChange}
                               onBlur={props.handleBlur}
                               value={props.values.task}
                           />
                            <CreateFormTextField
                                id={'desc'}
                                name={'desc'}
                                label={'Дополнительное описание'}
                                value={props.values.desc}
                                onChange={props.handleChange}
                                onBlur={props.handleBlur}
                            />
                           <CreateFormTextField
                               id={'time'}
                               name={'time'}
                               label={'Время на задачу'}
                               value={props.values.time}
                               onChange={props.handleChange}
                               onBlur={props.handleBlur}
                           />
                           <CreateFormSelect
                               id={'zone'}
                               name={'zone'}
                               label={'Зона отметки'}
                               items={projectList.zone}
                               onChange={props.handleChange}
                               onBlur={props.handleBlur}
                               value={props.values.zone}
                           />
                           <Button type={'submit'} color="primary" variant="contained">Создать</Button>
                           <span>&nbsp;&nbsp;&nbsp;&nbsp;</span>
                           <Button color="secondary" onClick={this.props.cancel} variant="contained">Отмена</Button>
                       </form>
                   )}
               >
               </Formik>
            </div>
        );
    }
}

export default CreatePlanItem;
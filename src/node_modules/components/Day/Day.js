import React, {Component} from 'react';
import PlanItem from "components/PlanItem/PlanItem";
import AddButton from 'components/Buttons/AddButton';
import './Day.css';
import { DraggableItemEntity } from "entities/ui";

import { observer, inject } from 'mobx-react';
import Grid from "components/Grid/Grid";
import CONFIG from 'config/app.config';

let DraggableItem = new DraggableItemEntity();

const Day = observer(class DayClass extends Component {

    showPlanItems = () => {
        const planItems = this.props.itemsArr.filter((item, index) => {
           return (this.props.items[item].zone === this.props.zone && this.props.items[item].date === this.props.date);
        });

        return planItems.map((item, index) => (
            <div key={item}
                 onDoubleClick={this.editItem.bind(null, {editIndex: item, ...this.props.items[item]})}
                 className={'day__item'}>
                <PlanItem
                    id={item}
                    zone={this.props.zone}
                    drag={DraggableItem}
                    params={this.props.items[item]}
                />
            </div>
        ));
    };

    changePlanItem = (day, event) => {
        if (DraggableItem.drag) {
            this.props.items[DraggableItem.index].setDate(day.date);
            DraggableItem.dragStop();
        }
    };

    addItem = (event, params = {}) => {
        console.log(this.props.appUi.modal.visible);
        if(this.props.appUi) {
            this.props.appUi.modal.setType('create-plan-item');
            this.props.appUi.modal.setParams({date: this.props.date, zone: this.props.zone, ...params});
            this.props.appUi.modal.makeVisible();
        }

    };

    editItem = (params, event) => {
        this.addItem(event, params);
    };

    deleteItem = (index) => {
        
    };

    render() {
        return (
            <div onMouseUp={this.changePlanItem.bind(null, {date: this.props.date, zone: this.props.zone})}
                 className={'day'}
            >
                <div className={`day__title ${this.props.active ? 'active' : ''}`}>
                    {this.props.date}
                </div>
                <div className={'day__body'}>
                    {this.showPlanItems()}
                    <Grid height={630} step={CONFIG.timeSampling*CONFIG.drawMultiple}/>
                    <AddButton onClick={this.addItem}/>
                </div>
            </div>
        );
    }
});

export default Day;

import {decorate, observable, computed, action} from "mobx";

class DraggableItem {
    index = null;
    drag = false;
    dragStart(index) {
        this.index = index;
        this.drag = true;
    }

    dragStop() {
        this.drag = false;
        let index = this.index;
        this.index = null;
        return index;
    }
}

export const DraggableItemEntity = decorate(DraggableItem, {
    index: observable,
    drag: observable
});

class ModalItem {
    visible = false;
    type = null;

    setType(type) {
        this.type = type;
    }

    clearType() {
        this.type = null;
    }

    makeVisible() {
        this.visible = true;
    }

    makeInvisible() {
        this.visible = false;
    }

    toggleVisible() {
        this.visible = !this.visible;
    }

}
export const ModalItemEntity = decorate(ModalItem, {
    visible: observable,
    type: observable
});
import {decorate, observable, computed, action} from "mobx";

class PlanItemEntity {
    id = null;
    userId = null;
    name = '';
    time = 0;
    timeChecked = 0;
    zone = '';
    taskId = null;
    date = '';
    additionDesc = '';
    projectName = '';
    projectId = '';

    constructor(params) {
        for (let key in params) {
            this[key] = params[key];
        }
    }

    get taskActivated() {
      return (this.taskId) === true
    }

    get complete() {
        return this.timeChecked/this.time*100
    }

    setDate(newDate) {
        this.date = newDate;
    }

    setTime(time) {
        this.time = time;
    }

    addTime(amount) {
        this.setTime(this.time + amount)
    }

    decreaseTime(amount) {
        this.setTime(this.time - amount)
    }

    setChecked(amount) {
        this.timeChecked += amount;
    }

}

export let PlanItemMobx = decorate(PlanItemEntity, {
    time: observable,
    timeChecked: observable,
    date: observable,
    additionDesc: observable,
    taskActivated: computed,
    complete: computed,
    setDate: action,
    setTime: action,
    addTime: action,
    decreaseTime: action,
    setChecked: action,
});

class PlanItemCollection {
    static id = null;
    items = {};

    constructor() {
        this.id = PlanItemCollection.id++;
    }

    get itemIds() {
        let array = [];
        for (let key in this.items) {
           array.push(key);
        }

        return array;
    }

    get length() {
        return this.itemIds.length;
    }

    addItem(params, index = this.length + 1) {
        this.items[index] = new PlanItemEntity(params);
        console.log(this);
    }

    editItem(params, index) {
        let item = this.items[index];
        if (!item) return ;
        this.items[index] = new PlanItemEntity(params);
    }

    removeItem(index) {
        delete this.items[index];
    }
}

export let PlanItemCollectionMobx = decorate(PlanItemCollection, {
    items: observable,
    itemIds: computed,
    length: computed,
    addItem: action,
    editItem: action,
    removeItem: action
});
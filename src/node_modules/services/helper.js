export const getMonday = function (date) {
    if (!date) throw new Error('getMonday: Не передан параметр');

    let newDate = date;
    while (date.getDay() > 1) {
        date.setDate(date.getDate() - 1);
    }

    return newDate;
};

export const getDaysInMilliseconds = function (daysCount) {
  const DAY = 1000*60*60*24;
  return DAY*daysCount;
};

export const serializeToGet = function(obj) {
    let result = '';
    if (typeof obj === 'object') {
        if (Array.isArray(obj)) {
            obj.forEach((item, index) => {
                result += `item_${index}=${item}&`
            });
        } else {
            for (let key of obj) {
                if (obj.hasOwnProperty(key)) {
                    result += `${key}=${obj[key]}&`
                }
            }
        }
    } else {
        result = '' + obj;
    }

    return result;

};

export const EmptyFunc = (...args) => {};

export const EmptyPromise = (...args) => {return new Promise(resolve => {resolve()})};

/**
 * Вычисляет offset элемента от начала страницы
 * @param element
 * @return {*}
 */
export const calculateOffsetTop = function (element) {
    let offsetTop = element.offsetTop;

    if (element !== document.body) {
        return offsetTop += calculateOffsetTop(element.offsetParent);
    } else {
        return element.offsetTop;
    }
};

/**
 * Вычисляет offset элемента от начала страницы
 * @param element
 * @return {*}
 */
export const calculateOffsetLeft = function (element) {
    let offsetLeft = element.offsetLeft;

    if (element !== document.body) {
        return offsetLeft += calculateOffsetLeft(element.offsetParent);
    } else {
        return element.offsetLeft;
    }
};
